
syntax = "proto3";

package rscap;

// The StreamData message corresponds to the StreamData struct in the Rust code.
message StreamDataProto {
    uint32 pid = 1;
    uint32 pmt_pid = 2;
    uint32 program_number = 3;
    string stream_type = 4; // "video", "audio", "text"
    uint32 continuity_counter = 5;
    uint64 timestamp = 6;
    uint32 bitrate = 7;
    uint32 bitrate_max = 8;
    uint32 bitrate_min = 9;
    uint32 bitrate_avg = 10;
    uint64 iat = 11;
    uint64 iat_max = 12;
    uint64 iat_min = 13;
    uint64 iat_avg = 14;
    uint32 error_count = 15;
    uint64 last_arrival_time = 16;
    uint64 start_time = 17;
    uint64 total_bits = 18;
    uint32 count = 19;
    bytes packet = 20; // The actual MPEG-TS packet data
    uint32 packet_start = 21; // Offset into the data
    uint32 packet_len = 22; // Length of the data
    // SMPTE 2110 fields
    uint32 rtp_timestamp = 23;
    uint32 rtp_payload_type = 24;
    string rtp_payload_type_name = 25;
    uint32 rtp_line_number = 26;
    uint32 rtp_line_offset = 27;
    uint32 rtp_line_length = 28;
    uint32 rtp_field_id = 29;
    uint32 rtp_line_continuation = 30;
    uint32 rtp_extended_sequence_number = 31;
}
