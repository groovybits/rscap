## rsCap Configuration

## Debugging
RUST_LOG="info" # debug, info, error
DEBUG=false     # Hexdump each packet
SILENT=false    # No output when running
SEND_JSON_HEADER=false # Send a json header with each ZMQ data packet

## ATTENTION: Wireless fails to capture reliably in most cases
USE_WIRELESS=false # Allow wireless interface usage

## Server writes to this ZMQ Host/Port
## Client reads from this ZMQ Host/Port
# ZeroMQ output host and port to TCP Publish
TARGET_IP="127.0.0.1"
TARGET_PORT=5556

## ATTENTION: Linux requires setting device name
# Pcap device to listen to, empty for autodetection
SOURCE_DEVICE=""

## Listen to MpegTS Multicast UDP
## ATTENTION: FIXME RTP SMPTE2110 support is minimal capture w/out stats
# Pcap filter for MpegTS multicast host and port
SOURCE_IP="224.0.0.200"
SOURCE_PORT=10000

## Client writes this file if it is defined
## TODO: need to allow application to handle this on cmdline input
## TODO: VOD segmented capture into HLS/Dash/CMAF segments raw and compressed
## TODO: image sequence captures
## TODO: header parsing for SCTE35/SCTE104, Captions, SEI...
## TODO: audio analysis
## TODO: create client fan-out processing of different tasks distributed w/ZMQ
# Output file name for client capture from ZeroMQ output
OUTPUT_FILE=capture.ts

## IO Read/Write values to use
# number of packets to batch before sending to ZMQ
BATCH_SIZE=1000 # 1000 188 byte packets == 188000 + 42 == 188042 is default
# Packet Size of batch packets and general divisibility of buffers captured
PACKET_SIZE=188 # SMPTE 2110 isn't specifically packetizing, uses BATCH_SIZE * PACKET_SIZE + PAYLOAD_OFFSET
# Ethernet (14 bytes) + IP (20 bytes) + UDP (8 bytes)
PAYLOAD_OFFSET=42 # pcap capture buffer offset for ethernet/ip headers
# Pcap Read Timeout in MS
READ_TIME_OUT=300000

